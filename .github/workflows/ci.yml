name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10
  PYTHON_VERSION: "3.12"

jobs:
  determine_changes:
    name: "Determine changes"
    runs-on: ubuntu-latest
    outputs:
      # Flag that is raised when any code is changed
      code: ${{ steps.changed.outputs.code_any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: tj-actions/changed-files@v45
        id: changed
        with:
          files_yaml: |
            code:
              - "**/*"
              - "!docs/**/*"
              - "!mkdocs.*.yml"
              - "!**/*.md"
              - "!bin/**"
              - "!assets/**"
              # Generated markdown and JSON files are checked during test runs
              - "docs/reference/cli.md"
              - "docs/reference/settings.md"
              - "docs/configuration/environment.md"
              - "uv.schema.json"

  cargo-test-linux-arm:
    timeout-minutes: 10
    needs: determine_changes
    if: ${{ github.repository == 'astral-sh/uv' && !contains(github.event.pull_request.labels.*.name, 'no-test') && (needs.determine_changes.outputs.code == 'true' || github.ref == 'refs/heads/main') }}
    runs-on: ubuntu-24.04-arm
    name: "cargo test | ubuntu"
    steps:
      - uses: actions/checkout@v4

      - uses: rui314/setup-mold@v1

      - uses: Swatinem/rust-cache@v2

      - name: "Install Rust toolchain"
        run: rustup show

      - uses: astral-sh/setup-uv@v5
      - name: "Install required Python versions"
        run: uv python install

      - name: "Install cargo nextest"
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: "Cargo test"
        run: |
          cargo nextest run \
            --features python-patch \
            --workspace \
            --status-level skip --failure-output immediate-final --no-fail-fast -j 20 --final-status-level slow

      - name: "Smoke test"
        run: |
          uv="./target/debug/uv"
          $uv venv -v
          $uv pip install ruff -v

      - name: "Smoke test completion"
        run: |
          uv="./target/debug/uv"
          uvx="./target/debug/uvx"
          eval "$($uv generate-shell-completion bash)"
          eval "$($uvx --generate-shell-completion bash)"


  cargo-test-linux-x86_64:
    timeout-minutes: 10
    needs: determine_changes
    if: ${{ github.repository == 'astral-sh/uv' && !contains(github.event.pull_request.labels.*.name, 'no-test') && (needs.determine_changes.outputs.code == 'true' || github.ref == 'refs/heads/main') }}
    runs-on: ubuntu-24.04
    name: "cargo test | ubuntu"
    steps:
      - uses: actions/checkout@v4

      - uses: rui314/setup-mold@v1

      - uses: Swatinem/rust-cache@v2

      - name: "Install Rust toolchain"
        run: rustup show

      - uses: astral-sh/setup-uv@v5
      - name: "Install required Python versions"
        run: uv python install

      - name: "Install cargo nextest"
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: "Cargo test"
        run: |
          cargo nextest run \
            --features python-patch \
            --workspace \
            --status-level skip --failure-output immediate-final --no-fail-fast -j 20 --final-status-level slow

      - name: "Smoke test"
        run: |
          uv="./target/debug/uv"
          $uv venv -v
          $uv pip install ruff -v

      - name: "Smoke test completion"
        run: |
          uv="./target/debug/uv"
          uvx="./target/debug/uvx"
          eval "$($uv generate-shell-completion bash)"
          eval "$($uvx --generate-shell-completion bash)"
